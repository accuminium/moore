/* Copyright (c) 2016 Fabian Schuiki */
#pragma once
#include "common.h"

enum vhdl_token {
	VHDL_EOF,
	VHDL_COMMENT,

	/* identifiers */
	VHDL_IDENT = 0x1000,
	VHDL_IDENT_BASIC,
	VHDL_IDENT_EXTENDED,

	/* literals */
	VHDL_LIT = 0x2000,
	VHDL_LIT_ABSTRACT,
	VHDL_LIT_CHARACTER,
	VHDL_LIT_STRING,
	VHDL_LIT_BITSTRING,

	/* symbols */
	VHDL_SYM = 0x3000,
	VHDL_AMPERSAND,
	VHDL_APOSTROPHE,
	VHDL_LPAREN,
	VHDL_RPAREN,
	VHDL_ASTERISK,
	VHDL_PLUS,
	VHDL_COMMA,
	VHDL_MINUS,
	VHDL_PERIOD,
	VHDL_SOLIDUS,
	VHDL_COLON,
	VHDL_SEMICOLON,
	VHDL_LESS,
	VHDL_EQUAL,
	VHDL_GREATER,
	VHDL_PIPE,
	VHDL_LBRACK,
	VHDL_RBRACK,
	VHDL_ARROW,
	VHDL_DOUBLESTAR,
	VHDL_VARASSIGN,
	VHDL_NOTEQUAL,
	VHDL_GREATEREQUAL,
	VHDL_LESSEQUAL,
	VHDL_BOX,

	/* keywords */
	VHDL_KW = 0x4000,
	VHDL_ABS,
	VHDL_ACCESS,
	VHDL_AFTER,
	VHDL_ALIAS,
	VHDL_ALL,
	VHDL_AND,
	VHDL_ARCHITECTURE,
	VHDL_ARRAY,
	VHDL_ASSERT,
	VHDL_ATTRIBUTE,
	VHDL_BEGIN,
	VHDL_BLOCK,
	VHDL_BODY,
	VHDL_BUFFER,
	VHDL_BUS,
	VHDL_CASE,
	VHDL_COMPONENT,
	VHDL_CONFIGURATION,
	VHDL_CONSTANT,
	VHDL_DISCONNECT,
	VHDL_DOWNTO,
	VHDL_ELSE,
	VHDL_ELSIF,
	VHDL_END,
	VHDL_ENTITY,
	VHDL_EXIT,
	VHDL_FILE,
	VHDL_FOR,
	VHDL_FUNCTION,
	VHDL_GENERATE,
	VHDL_GENERIC,
	VHDL_GROUP,
	VHDL_GUARDED,
	VHDL_IF,
	VHDL_IMPURE,
	VHDL_IN,
	VHDL_INERTIAL,
	VHDL_INOUT,
	VHDL_IS,
	VHDL_LABEL,
	VHDL_LIBRARY,
	VHDL_LINKAGE,
	VHDL_LITERAL,
	VHDL_LOOP,
	VHDL_MAP,
	VHDL_MOD,
	VHDL_NAND,
	VHDL_NEW,
	VHDL_NEXT,
	VHDL_NOR,
	VHDL_NOT,
	VHDL_NULL,
	VHDL_OF,
	VHDL_ON,
	VHDL_OPEN,
	VHDL_OR,
	VHDL_OTHERS,
	VHDL_OUT,
	VHDL_PACKAGE,
	VHDL_PORT,
	VHDL_POSTPONED,
	VHDL_PROCEDURAL,
	VHDL_PROCEDURE,
	VHDL_PROCESS,
	VHDL_PROTECTED,
	VHDL_PURE,
	VHDL_RANGE,
	VHDL_RECORD,
	VHDL_REFERENCE,
	VHDL_REGISTER,
	VHDL_REJECT,
	VHDL_REM,
	VHDL_REPORT,
	VHDL_RETURN,
	VHDL_ROL,
	VHDL_ROR,
	VHDL_SELECT,
	VHDL_SEVERITY,
	VHDL_SHARED,
	VHDL_SIGNAL,
	VHDL_SLA,
	VHDL_SLL,
	VHDL_SRA,
	VHDL_SRL,
	VHDL_SUBTYPE,
	VHDL_THEN,
	VHDL_TO,
	VHDL_TRANSPORT,
	VHDL_TYPE,
	VHDL_UNAFFECTED,
	VHDL_UNITS,
	VHDL_UNTIL,
	VHDL_USE,
	VHDL_VARIABLE,
	VHDL_WAIT,
	VHDL_WHEN,
	VHDL_WHILE,
	VHDL_WITH,
	VHDL_XNOR,
	VHDL_XOR,
};

enum sv_token {
	SV_EOF,
	SV_COMMENT,
	SV_IDENT,
	SV_ESC_IDENT,
	SV_COMP_DIR,
	SV_SYSNAME,
	SV_LIT_STRING,

	SV_SYMBOL = 0x1000,
	SV_LPAREN,
	SV_RPAREN,
	SV_LBRACK,
	SV_RBRACK,
	SV_LBRACE,
	SV_RBRACE,
	SV_AS,
	SV_ASADD,
	SV_ASSUB,
	SV_ASMUL,
	SV_ASDIV,
	SV_ASMOD,
	SV_ASAND,
	SV_ASOR,
	SV_ASXOR,
	SV_ASLSL,
	SV_ASLSR,
	SV_ASASL,
	SV_ASASR,
	SV_QUEST,
	SV_COLON,
	SV_ADD,
	SV_SUB,
	SV_MUL,
	SV_DIV,
	SV_POW,
	SV_MOD,
	SV_EXCL,
	SV_TILDA,
	SV_AND,
	SV_NAND,
	SV_OR,
	SV_NOR,
	SV_XOR,
	SV_NXOR,
	SV_XNOR,
	SV_LEQ,
	SV_LNEQ,
	SV_CEQ,
	SV_CNEQ,
	SV_WCEQ,
	SV_WCNEQ,
	SV_LAND,
	SV_LOR,
	SV_IMPL,
	SV_EQUIV,
	SV_LT,
	SV_LE,
	SV_GT,
	SV_GE,
	SV_LSL,
	SV_LSR,
	SV_ASL,
	SV_ASR,
	SV_INC,
	SV_DEC,
	SV_SEMICOLON,
	SV_PERIOD,
	SV_COMMA,
};

vhdl_lexer_t *vhdl_lexer_new(source_t*);
void vhdl_lexer_free(vhdl_lexer_t*);
vhdl_token_t vhdl_lexer_token(vhdl_lexer_t*);
void vhdl_lexer_next(vhdl_lexer_t*);

sv_lexer_t *sv_lexer_new(source_t*);
void sv_lexer_free(sv_lexer_t*);
sv_token_t sv_lexer_token(sv_lexer_t*);
const utf8_t *sv_lexer_text(sv_lexer_t*);
void sv_lexer_next(sv_lexer_t*);
